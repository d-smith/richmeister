AWSTemplateFormatVersion: '2010-09-09'
Description: >
  Create a lambda function to copy events from a dynamo db stream to a fifo queue.

Parameters:
  CodeBucketName:
    Type: String
    Description: Bucket containing lambda code zip file
  ZipFileName:
    Type: String
    Default: s2fq.zip
  StreamArn:
    Type: String
    Description: StreamArn to consume events from
  TableName:
    Type: String
    Description: Name of table generating stream events

Resources:
  S2FQLambda:
    Type: "AWS::Lambda::Function"
    DependsOn: ReplicationQueue
    Properties:
      Handler: stream2fifo.handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        S3Bucket: !Ref CodeBucketName
        S3Key: !Ref ZipFileName
      Runtime: "nodejs6.10"
      Environment:
        Variables:
          QUEUE_URL: !Ref ReplicationQueue
          QUEUE_NAME: !Join [ '', [ !Ref "AWS::StackName", "-ReplQ.fifo"]]

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
            - edgelambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      Policies:
      - PolicyName: logs
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:*
            Resource: arn:aws:logs:*:*:*
      - PolicyName: sendmsg
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - sqs:SendMessage
            Resource: !GetAtt [ReplicationQueue, "Arn"]
      - PolicyName: streams
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - dynamodb:DescribeStream
            - dynamodb:GetRecords
            - dynamodb:GetShardIterator
            - dynamodb:ListStreams
            Resource: !Join [ '', ['arn:aws:dynamodb:', !Ref 'AWS::Region' , ':', !Ref 'AWS::AccountId', ':table/', !Ref 'TableName', '/stream/*']]

  EventSourceMapping:
    Type: "AWS::Lambda::EventSourceMapping"
    Properties:
      BatchSize: 1
      Enabled: True
      EventSourceArn: !Ref StreamArn
      FunctionName: !GetAtt S2FQLambda.Arn
      StartingPosition: TRIM_HORIZON

  ReplicationQueue:
    Type: "AWS::SQS::Queue"
    Properties:
      QueueName: !Join [ '', [ !Ref "AWS::StackName", "-ReplQ.fifo"]]
      ContentBasedDeduplication: False
      FifoQueue: True

Outputs:
  QueueUrl:
    Value: !Ref ReplicationQueue

  QueueName:
    Value: !GetAtt ReplicationQueue.QueueName