AWSTemplateFormatVersion: '2010-09-09'
Description: >
  Create a lambda function to copy events from a dynamo db stream to a fifo queue.

Parameters:
  CodeBucketName:
    Type: String
    Description: Bucket containing lambda code zip file
  ZipFileName:
    Type: String
    Default: fq2ddb.zip
  FnTimeout:
    Type: String
    Default: 55
    Description: >
      Lambda fn timeout - this should be less than the schedule
      interval to allow graceful exit
  ScheduleExpression:
    Type: String
    Default: "rate(1 minute)"
    Description: >
      Cloud watch event schedule expression used to determine
      how often to execute the function. Align this with the 
      function timeout to have a single lambda execution in
      flight at a time.
  QueueUrl:
    Type: String
    Description: Url of queue to receive messages from
  QueueName:
    Type: String
    Description: Name of the queue to receive messages from
  DestinationTable:
    Type: String
    Description: Destination table
  DestinationRegion:
    Type: String
    Description: Region containing destination table

Resources:
  CopyMachine:
    Type: "AWS::Lambda::Function"
    Properties:
      Handler: "fq2ddb.lambda_handler"
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
          S3Bucket: !Ref CodeBucketName
          S3Key: !Ref ZipFileName
      Runtime: "python2.7"
      Timeout: !Ref FnTimeout
      Environment:
        Variables:
          QUEUE_URL: !Ref QueueUrl
          TTL_SECONDS: !Ref FnTimeout
          DEST_TABLE: !Ref DestinationTable
          DEST_REGION: !Ref DestinationRegion
          STACK_NAME: !Ref AWS::StackName

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
            - edgelambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      Policies:
      - PolicyName: logs
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:*
            Resource: arn:aws:logs:*:*:*
      - PolicyName: metrics
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - cloudwatch:PutMetricData
            Resource: '*'
      - PolicyName: queue
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - sqs:DeleteMessage
            - sqs:ReceiveMessage
            Resource: !Join [ ':', ['arn:aws:sqs', !Ref "AWS::Region", !Ref "AWS::AccountId", !Ref "QueueName"]]
      - PolicyName: tablewrite
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
            - dynamodb:DescribeTable
            Resource: !Join [ '', ['arn:aws:dynamodb:', !Ref 'DestinationRegion' , ':', !Ref 'AWS::AccountId', ':table/', !Ref 'DestinationTable']]

  ScheduledRule: 
    Type: "AWS::Events::Rule"
    Properties: 
      Description: "ScheduledRule"
      ScheduleExpression: !Ref ScheduleExpression
      State: "ENABLED"
      Targets: 
        - 
          Arn: 
            Fn::GetAtt: 
              - "CopyMachine"
              - "Arn"
          Id: "TargetFunctionV1"

  PermissionForEventsToInvokeLambda: 
    Type: "AWS::Lambda::Permission"
    Properties: 
      FunctionName: 
        Ref: "CopyMachine"
      Action: "lambda:InvokeFunction"
      Principal: "events.amazonaws.com"
      SourceArn: 
        Fn::GetAtt: 
          - "ScheduledRule"
          - "Arn"


  
